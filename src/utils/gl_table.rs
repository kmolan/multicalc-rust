pub const MAX_GL_ORDER: usize = 20;

pub fn get_gl_weights_and_abscissae(n: usize) -> (Vec<f64>, Vec<f64>)
{
    let mut result_abscissae = vec![0.0; n];
    let mut result_weight = vec![0.0; n];

    let ref_abs: &[f64] = match n 
    {
        2 => &LEGENDRE_ABSCISSA_2[..],
        3 => &LEGENDRE_ABSCISSA_3[..],
        4 => &LEGENDRE_ABSCISSA_4[..],
        5 => &LEGENDRE_ABSCISSA_5[..],
        6 => &LEGENDRE_ABSCISSA_6[..],
        7 => &LEGENDRE_ABSCISSA_7[..],
        8 => &LEGENDRE_ABSCISSA_8[..],
        9 => &LEGENDRE_ABSCISSA_9[..],
        10 => &LEGENDRE_ABSCISSA_10[..],
        11 => &LEGENDRE_ABSCISSA_11[..],
        12 => &LEGENDRE_ABSCISSA_12[..],
        13 => &LEGENDRE_ABSCISSA_13[..],
        14 => &LEGENDRE_ABSCISSA_14[..],
        15 => &LEGENDRE_ABSCISSA_15[..],
        16 => &LEGENDRE_ABSCISSA_16[..],
        17 => &LEGENDRE_ABSCISSA_17[..],
        18 => &LEGENDRE_ABSCISSA_18[..],
        19 => &LEGENDRE_ABSCISSA_19[..],
        20 => &LEGENDRE_ABSCISSA_20[..],
        _ => panic!("Legendre quadrature is limited from to n = 1 to {}", MAX_GL_ORDER),
    };

    let ref_weight: &[f64] = match n 
    {
        2 => &LEGENDRE_WEIGHT_2[..],
        3 => &LEGENDRE_WEIGHT_3[..],
        4 => &LEGENDRE_WEIGHT_4[..],
        5 => &LEGENDRE_WEIGHT_5[..],
        6 => &LEGENDRE_WEIGHT_6[..],
        7 => &LEGENDRE_WEIGHT_7[..],
        8 => &LEGENDRE_WEIGHT_8[..],
        9 => &LEGENDRE_WEIGHT_9[..],
        10 => &LEGENDRE_WEIGHT_10[..],
        11 => &LEGENDRE_WEIGHT_11[..],
        12 => &LEGENDRE_WEIGHT_12[..],
        13 => &LEGENDRE_WEIGHT_13[..],
        14 => &LEGENDRE_WEIGHT_14[..],
        15 => &LEGENDRE_WEIGHT_15[..],
        16 => &LEGENDRE_WEIGHT_16[..],
        17 => &LEGENDRE_WEIGHT_17[..],
        18 => &LEGENDRE_WEIGHT_18[..],
        19 => &LEGENDRE_WEIGHT_19[..],
        20 => &LEGENDRE_WEIGHT_20[..],
        _ => panic!("Legendre quadrature is limited from to n = 1 to {}", MAX_GL_ORDER),
    };

    if n % 2 == 0
    {
        for i in 0..ref_abs.len()
        {
            result_abscissae[2*i] = -ref_abs[i];
            result_abscissae[2*i + 1] = ref_abs[i];

            result_weight[2*i] = ref_weight[i];
            result_weight[2*i + 1] = ref_weight[i];
        }
    }
    else
    {
        result_abscissae[0] = 0.0; //this is always zero
        result_weight[0] = ref_weight[0];

        for i in 1..ref_weight.len() 
        {
            result_abscissae[i] = -ref_abs[i - 1];
            result_weight[i] = ref_weight[i];

            result_abscissae[n - i - 1] = ref_abs[i - 1];
            result_weight[n - i - 1] = ref_weight[i];
        }
    }

    return (result_weight, result_abscissae);
}


// =============================================================================
// Table taken from https://pomax.github.io/bezierinfo/legendre-gauss.html
// =============================================================================
const LEGENDRE_ABSCISSA_2: [f64; 1] = [0.577_350_269_189_626];
const LEGENDRE_ABSCISSA_3: [f64; 1] = [0.774_596_669_241_483];
const LEGENDRE_ABSCISSA_4: [f64; 2] = [0.339_981_043_584_856, 0.861_136_311_594_053];
const LEGENDRE_ABSCISSA_5: [f64; 2] = [0.538_469_310_105_683, 0.906_179_845_938_664];
const LEGENDRE_ABSCISSA_6: [f64; 3] = [0.238_619_186_083_197, 0.661_209_386_466_265, 0.932_469_514_203_152];
const LEGENDRE_ABSCISSA_7: [f64; 3] = 
[
    0.405_845_151_377_397,
    0.741_531_185_599_394,
    0.949_107_912_342_759,
];
const LEGENDRE_ABSCISSA_8: [f64; 4] = 
[
    0.183_434_642_495_65,
    0.525_532_409_916_329,
    0.796_666_477_413_627,
    0.960_289_856_497_536,
];
const LEGENDRE_ABSCISSA_9: [f64; 4] = 
[
    0.324_253_423_403_809,
    0.613_371_432_700_59,
    0.836_031_107_326_636,
    0.968_160_239_507_626,
];
const LEGENDRE_ABSCISSA_10: [f64; 5] = 
[
    0.148_874_338_981_631,
    0.433_395_394_129_247,
    0.679_409_568_299_024,
    0.865_063_366_688_985,
    0.973_906_528_517_172,
];
const LEGENDRE_ABSCISSA_11: [f64; 5] = 
[
    0.269_543_155_952_345,
    0.519_096_129_110_681,
    0.730_152_005_574_049,
    0.887_062_599_768_095,
    0.978_228_658_146_057,
];
const LEGENDRE_ABSCISSA_12: [f64; 6] = 
[
    0.125_333_408_511_469,
    0.367_831_498_918_18,
    0.587_317_954_286_617,
    0.769_902_674_194_305,
    0.904_117_256_370_475,
    0.981_560_634_246_719,
];
const LEGENDRE_ABSCISSA_13: [f64; 6] = 
[
    0.230_458_315_955_135,
    0.448_492_751_036_447,
    0.642_349_339_440_34,
    0.801_578_090_733_31,
    0.917_598_399_222_978,
    0.984_183_054_718_588,
];
const LEGENDRE_ABSCISSA_14: [f64; 7] = 
[
    0.108_054_948_707_344,
    0.319_112_368_927_89,
    0.515_248_636_358_154,
    0.687_292_904_811_685,
    0.827_201_315_069_765,
    0.928_434_883_663_574,
    0.986_283_808_696_812,
];
const LEGENDRE_ABSCISSA_15: [f64; 7] = 
[
    0.201_194_093_997_435,
    0.394_151_347_077_563,
    0.570_972_172_608_539,
    0.724_417_731_360_17,
    0.848_206_583_410_427,
    0.937_273_392_400_706,
    0.987_992_518_020_485,
];
const LEGENDRE_ABSCISSA_16: [f64; 8] = 
[
    0.095_012_509_837_637,
    0.281_603_550_779_259,
    0.458_016_777_657_227,
    0.617_876_244_402_644,
    0.755_404_408_355_003,
    0.865_631_202_387_832,
    0.944_575_023_073_233,
    0.989_400_934_991_65,
];
const LEGENDRE_ABSCISSA_17: [f64; 8] = 
[
    0.178_484_181_495_847_85,
    0.351_231_763_453_876_3,
    0.512_690_537_086_476_9,
    0.657_671_159_216_690_7,
    0.781_514_003_896_801_4,
    0.880_239_153_726_985_9,
    0.950_675_521_768_767_8,
    0.990_575_475_314_417_4,
];
const LEGENDRE_ABSCISSA_18: [f64; 9] = 
[
    0.084_775_013_041_735_3,
    0.251_886_225_691_505_5,
    0.411_751_161_462_842_63,
    0.559_770_831_073_947_5,
    0.691_687_043_060_353_2,
    0.803_704_958_972_523_1,
    0.892_602_466_497_555_7,
    0.955_823_949_571_397_7,
    0.991_565_168_420_930_9,
];
const LEGENDRE_ABSCISSA_19: [f64; 9] = 
[
    0.160_358_645_640_225_37,
    0.316_564_099_963_629_83,
    0.464_570_741_375_960_94,
    0.600_545_304_661_681,
    0.720_966_177_335_229_4,
    0.822_714_656_537_142_8,
    0.903_155_903_614_817_9,
    0.960_208_152_134_83,
    0.992_406_843_843_584_4,
];
const LEGENDRE_ABSCISSA_20: [f64; 10] = 
[
    0.076_526_521_133_497_34,
    0.227_785_851_141_645_07,
    0.373_706_088_715_419_55,
    0.510_867_001_950_827_1,
    0.636_053_680_726_515,
    0.746_331_906_460_150_8,
    0.839_116_971_822_218_8,
    0.912_234_428_251_326,
    0.963_971_927_277_913_8,
    0.993_128_599_185_094_9,
];


const LEGENDRE_WEIGHT_2: [f64; 1] = [1.0];
const LEGENDRE_WEIGHT_3: [f64; 2] = [0.888_888_888_888_889, 0.555555555555556];
const LEGENDRE_WEIGHT_4: [f64; 2] = [0.652_145_154_862_546, 0.347854845137454];
const LEGENDRE_WEIGHT_5: [f64; 3] = [0.568_888_888_888_889, 0.478_628_670_499_366, 0.236926885056189];
const LEGENDRE_WEIGHT_6: [f64; 3] = [0.467_913_934_572_691, 0.360_761_573_048_139, 0.171324492379170];
const LEGENDRE_WEIGHT_7: [f64; 4] =
[
    0.417_959_183_673_469,
    0.381_830_050_505_119,
    0.279_705_391_489_277,
    0.129_484_966_168_87,
];
const LEGENDRE_WEIGHT_8: [f64; 4] =
[
    0.362_683_783_378_362,
    0.313_706_645_877_887,
    0.222_381_034_453_374,
    0.101_228_536_290_376,
];
const LEGENDRE_WEIGHT_9: [f64; 5] =
[
    0.330_239_355_001_26,
    0.312_347_077_040_003,
    0.260_610_696_402_935,
    0.180_648_160_694_857,
    0.081_274_388_361_574,
];
const LEGENDRE_WEIGHT_10: [f64; 5] =
[
    0.295_524_224_714_753,
    0.269_266_719_309_996,
    0.219_086_362_515_982,
    0.149_451_349_150_581,
    0.066_671_344_308_688,
];
const LEGENDRE_WEIGHT_11: [f64; 6] =
[
    0.272_925_086_777_901,
    0.262_804_544_510_247,
    0.233_193_764_591_99,
    0.186_290_210_927_734,
    0.125_580_369_464_905,
    0.055_668_567_116_174,
];
const LEGENDRE_WEIGHT_12: [f64; 6] =
[
    0.249_147_045_813_403,
    0.233_492_536_538_355,
    0.203_167_426_723_066,
    0.160_078_328_543_346,
    0.106_939_325_995_318,
    0.047_175_336_386_512,
];
const LEGENDRE_WEIGHT_13: [f64; 7] =
[
    0.232_551_553_230_874,
    0.226_283_180_262_897,
    0.207_816_047_536_889,
    0.178_145_980_761_946,
    0.138_873_510_219_787,
    0.092_121_499_837_728,
    0.040_484_004_765_316,
];
const LEGENDRE_WEIGHT_14: [f64; 7] =
[
    0.215_263_853_463_158,
    0.205_198_463_721_29,
    0.185_538_397_477_938,
    0.157_203_167_158_194,
    0.121_518_570_687_903,
    0.080_158_087_159_76,
    0.035_119_460_331_752,
];
const LEGENDRE_WEIGHT_15: [f64; 8] =
[
    0.202_578_241_925_561,
    0.198_431_485_327_111,
    0.186_161_000_015_562,
    0.166_269_205_816_994,
    0.139_570_677_926_154,
    0.107_159_220_467_172,
    0.070_366_047_488_108,
    0.030_753_241_996_117,
];
const LEGENDRE_WEIGHT_16: [f64; 8] =
[
    0.189_450_610_455_069,
    0.182_603_415_044_924,
    0.169_156_519_395_003,
    0.149_595_988_816_577,
    0.124_628_971_255_534,
    0.095_158_511_682_493,
    0.062_253_523_938_648,
    0.027_152_459_411_754,
];
const LEGENDRE_WEIGHT_17: [f64; 9] =
[
    0.179_446_470_356_206_53,
    0.176_562_705_366_992_64,
    0.168_004_102_156_450_04,
    0.154_045_761_076_810_28,
    0.135_136_368_468_525_48,
    0.111_883_847_193_403_97,
    0.085_036_148_317_179_18,
    0.055_459_529_373_987_2,
    0.024_148_302_868_547_93,
];
const LEGENDRE_WEIGHT_18: [f64; 9] =
[
    0.169_142_382_963_143_6,
    0.164_276_483_745_832_73,
    0.154_684_675_126_265_24,
    0.140_642_914_670_650_65,
    0.122_555_206_711_478_46,
    0.100_942_044_106_287_17,
    0.076_425_730_254_889_07,
    0.049_714_548_894_969_8,
    0.021_616_013_526_483_31,
];
const LEGENDRE_WEIGHT_19: [f64; 10] =
[
    0.161_054_449_848_783_7,
    0.158_968_843_393_954_34,
    0.152_766_042_065_859_67,
    0.142_606_702_173_606_6,
    0.128_753_962_539_336_21,
    0.111_566_645_547_333_99,
    0.091_490_021_622_45,
    0.069_044_542_737_641_23,
    0.044_814_226_765_699_6,
    0.019_461_788_229_726_478,
];
const LEGENDRE_WEIGHT_20: [f64; 10] =
[
    0.152_753_387_130_725_84,
    0.149_172_986_472_603_74,
    0.142_096_109_318_382_04,
    0.131_688_638_449_176_64,
    0.118_194_531_961_518_41,
    0.101_930_119_817_240_44,
    0.083_276_741_576_704_75,
    0.062_672_048_334_109_07,
    0.040_601_429_800_386_94,
    0.017_614_007_139_152_118,
];